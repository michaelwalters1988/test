description: HEAT template for Server Configuration
heat_template_version: '2015-04-30'
parameters:
    branch_rsConfigs: {default: staging, type: string}
    image:
        constraints:
        -   allowed_values: [Windows Server 2012, Windows Server 2012 R2]
        default: Windows Server 2012 R2
        description: Rackspace Cloud Server image name
        type: string
    flavor:
        constraints:
        -   allowed_values: [1 GB Performance, 2 GB Performance, 4 GB Performance,
                8 GB Performance, 15 GB Performance, 1 GB General Purpose v1, 2 GB
                    General Purpose v1, 4 GB General Purpose v1, 8 GB General Purpose
                    v1]
            description: must be a valid Rackspace Cloud Server flavor.
        default: 4 GB Performance
        description: Rackspace Cloud Server flavor
        type: string
    git_Oauthtoken: {type: string}
    git_username: {type: string}
    main_Repo: {default: DDI_RSConfigs, description: provisioning repo branch, type: string}
    prov_Branch: {default: v2.0.0, description: provisioning repo branch, type: string}
    pullserver_hostname:
        constraints:
        -   length: {max: 15, min: 1}
        default: PULLServer
        description: Windows Server Name
        type: string
    rs_apikey: {description: Rackspace Cloud APIKey, type: string}
    rs_username: {description: Rackspace Cloud Username, type: string}
resources:
    rs_pull_server:
      type: Rackspace::Cloud::WinServer
      properties:
        flavor: {get_param: flavor}
        image: {get_param: image}
        name: {get_param: pullserver_hostname}
        metadata: 
          rax_dsc_config: rsPullServer.ps1
          build_config: core
        user_data:
          str_replace: 
                 params:
                   "%%branch_rsConfigs" : { get_param: branch_rsConfigs }
                   "%%git_username" : { get_param: git_username }
                   "%%git_Oauthtoken" : { get_param: git_Oauthtoken }
                   "%%prov_Branch" : { get_param: prov_Branch }
                   "%%main_Repo" : { get_param: main_Repo }
                   "%%rs_username" : { get_param: rs_username }
                   "%%rs_apikey" : { get_param: rs_apikey }
                 template: |
                       if((Test-Path -Path 'C:\DevOps') -eq $false) {New-Item -Path 'C:\DevOps' -ItemType Directory -Force}
                       Set-Content -Path "C:\DevOps\secrets.ps1" -Value "`$d = @{"
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value """branch_rsConfigs"" = ""%%branch_rsConfigs"""
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value """mR"" = ""%%main_Repo"""
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value """provBr"" = ""%%prov_Branch"""
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value """git_username"" = ""%%git_username"""
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value """git_Oauthtoken"" = ""%%git_Oauthtoken"""
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value """stack_guid"" = ""%%stack_guid"""
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value """rs_username"" = ""%%rs_username"""
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value """rs_apikey"" = ""%%rs_apikey"""
                       Add-Content -Path "C:\DevOps\secrets.ps1" -Value "}"
                       (New-Object System.Net.webclient).DownloadFile('http://rsWinAutomationSupport.github.io/rsbootstrap/bootstrap.ps1','C:\DevOps\bootstrap.ps1')
                       Set-Content -Path "C:\DevOps\DevOpsBoot.cmd" -Value "Powershell.exe Set-ExecutionPolicy Bypass -Force; Powershell.exe ""C:\DevOps\bootstrap.ps1"""
                       start "C:\DevOps\DevOpsBoot.cmd"